name: CI Checks

on: [push, pull_request]

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    defaults:
      run:
        working-directory: ./analyzer 
        # Assuming get_doc_id.py and test_get_doc_id.py are in 'analyzer'
        # and 'analyzer' is a Python package (has __init__.py)
        # If not, adjust paths or how pytest discovers tests.
        # For `from .get_doc_id import get_doc_id` to work,
        # test_get_doc_id.py should be in the same directory as get_doc_id.py,
        # and that directory should be treated as a package or tests run from parent.
        # Simpler: place test_get_doc_id.py in 'analyzer' and run pytest from 'analyzer'.

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    - name: Run Python tests
      # If 'analyzer' is not a package, run pytest from the root specifying the test file.
      # run: pytest ./analyzer/test_get_doc_id.py 
      # If 'analyzer' is a package and tests are run from within 'analyzer':
      run: pytest # Pytest will discover test_*.py files

  javascript-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./website
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Or your preferred LTS version
    - name: Install JavaScript dependencies
      run: npm ci # Use 'npm install' if no package-lock.json
    - name: Run JavaScript tests
      run: npm test